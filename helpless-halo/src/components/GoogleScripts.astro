<script async is:inline src="https://www.googletagmanager.com/gtag/js?id=GT-MR4MFC6"></script>
<!--
<script async is:inline src="https://www.googletagmanager.com/gtag/js?id=GT-5TG3DK3"></script> -->
<script async is:inline>
  // Google Tag Manager
  (function (w, d, s, l, i) {
    w[l] = w[l] || [];
    w[l].push({ "gtm.start": new Date().getTime(), event: "gtm.js" });
    var f = d.getElementsByTagName(s)[0],
      j = d.createElement(s),
      dl = l != "dataLayer" ? "&l=" + l : "";
    j.async = true;
    j.src = "https://www.googletagmanager.com/gtm.js?id=" + i + dl;
    f.parentNode.insertBefore(j, f);
  })(window, document, "script", "dataLayer", "GTM-PWK4LSL");

  // Gtag Configuration
  window.dataLayer = window.dataLayer || [];
  function gtag() {
    dataLayer.push(arguments);
  }

  gtag("consent", "default", {
    "ad_user_data": "denied",
    "ad_personalization": "denied",
    "ad_storage": "denied",
    "analytics_storage": "denied",
    "wait_for_update": 500
  });

  gtag("js", new Date());

  // Google Analytics Config
  gtag("config", "GT-MR4MFC6", { 
    "anonymize_ip": true,
    "cookie_flags": "SameSite=None;Secure",
    "currency": "EUR",
    "region": "EU"
  });

  // Google AdWords Config
  /*
  gtag("config", "GT-5TG3DK3", {
    "anonymize_ip": true,
    "currency": "EUR",
    "region": "EU"
  }); */

  // Update consent function to be called when user grants consent
  /*
  function consentGrantedAdStorage() {
    gtag("consent", "update", {
      "ad_user_data": "granted",
      "ad_personalization": "granted",
      "ad_storage": "granted",
      "analytics_storage": "granted"
    });
  } */

 // Consent granted handler
 function consentGranted() {
    gtag("consent", "update", {
      "ad_storage": "granted",
      "analytics_storage": "granted"
    });
    initializeGoogleAnalytics();
  }

  // Check for consent status
  var userHasConsented = false; // Default to false
  document.addEventListener('DOMContentLoaded', function() {
    // Example function to check if user has consented
    // Replace this with your actual consent check logic
    function checkUserConsent() {
      return cmpApi.getConsentStatus(); // Hypothetical function
    }

    userHasConsented = checkUserConsent();

    if (userHasConsented) {
      // If user has consented, update consent and initialize Google Analytics
      gtag("consent", "update", {
        "ad_user_data": "granted",
        "ad_personalization": "granted",
        "ad_storage": "granted",
        "analytics_storage": "granted"
      });
      initializeGoogleAnalytics();
    }
  });

  // Listen for the consent given event
  document.addEventListener('consentGiven', function() {
    gtag("consent", "update", {
      "ad_user_data": "granted",
      "ad_personalization": "granted",
      "ad_storage": "granted",
      "analytics_storage": "granted"
    });
    initializeGoogleAnalytics();
  });
</script>
